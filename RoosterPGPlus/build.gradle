buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
        classpath 'me.tatarka:gradle-retrolambda:3.2.0'
        classpath 'com.github.triplet.gradle:play-publisher:1.1.2'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.github.triplet.play'

repositories {
    mavenCentral()
    maven { url 'http://dl.bintray.com/populov/maven' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

android {
    compileSdkVersion 23
    buildToolsVersion '23'
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }

    signingConfigs {
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        if (System.getenv("TRAVIS")) {
            release {
                storeFile rootProject.file('releasekeystore.dat')
                storePassword System.getenv("KEYSTORE_PASS")
                keyAlias System.getenv("ALIAS_NAME")
                keyPassword System.getenv("ALIAS_PASS")
            }
        } else {
            release {
                storeFile rootProject.file('releasekeystore.dat')
                storePassword ""
                keyAlias ""
                keyPassword ""
            }
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "GRADLE_DEBUG", "true"
        }

        prerelease {
            buildConfigField "boolean", "GRADLE_DEBUG", "true"
        }

        release {
            buildConfigField "boolean", "GRADLE_DEBUG", "false"
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    provided 'org.projectlombok:lombok:1.16.2'
    provided 'javax.annotation:jsr250-api:1.0'
    compile fileTree(include: '*.jar', dir: 'libs')
    // You must install or update the Support Repository through the SDK manager to use this dependency.
    compile 'com.android.support:support-v4:23.0.0'
    compile 'com.android.support:gridlayout-v7:23.0.0'
    compile 'com.android.support:appcompat-v7:23.0.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:cardview-v7:23.0.0'
    compile 'com.android.support:recyclerview-v7:23.0.0'
    compile 'com.android.support:design:23.0.0'
    compile 'com.google.android.gms:play-services-base:7.5.0'
    compile 'com.google.android.gms:play-services-analytics:7.5.0'
    compile 'com.google.android.gms:play-services-gcm:7.5.0'
    compile 'com.google.code.findbugs:jsr305:1.3.9'
    compile 'org.apache.commons:commons-lang3:3.0'
    compile 'com.j256.ormlite:ormlite-core:4.48'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'org.functionaljava:functionaljava:4.2'
    compile 'com.netflix.rxjava:rxjava-core:0.19.6'
    compile 'com.netflix.rxjava:rxjava-android:0.19.6'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'joda-time:joda-time:2.4'
    compile 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    compile 'com.mikepenz.aboutlibraries:library:4.5.0'
    compile 'ch.acra:acra:4.6.1'
    compile 'me.zhanghai.android.materialprogressbar:library:1.0.2'
    compile 'com.quinny898.library.persistentsearch:library:1.0.0-SNAPSHOT'
    compile('com.mikepenz:materialdrawer:3.1.2@aar') { transitive = true }
}

retrolambda {
    jdk System.getenv("JAVA_HOME")
    oldJdk System.getenv("JAVA7_HOME")
    javaVersion JavaVersion.VERSION_1_7
    jvmArgs '-noverify'
}


if(System.getenv("TRAVIS") && System.getenv("TRAVIS_TAG")) {
    play {
        serviceAccountEmail = System.getenv("SERVICE_EMAIL")
        pk12File = rootProject.file('play.p12')
        if(System.getenv("TRAVIS_TAG") && System.getenv("TRAVIS_TAG").contains("beta")) {
            track = 'beta'
        } else if(System.getenv("TRAVIS_TAG") && System.getenv("TRAVIS_TAG").contains("alpha")) {
            track = 'alpha'
        } else {
            track = 'production'
        }
    }
}

task travisBuild(dependsOn: [':RoosterPGPlus:clean', ':RoosterPGPlus:assembleRelease'])
if(System.getenv("TRAVIS_TAG")) {
    tasks.travisBuild.dependsOn(':RoosterPGPlus:publishApkRelease')
}
assembleRelease.mustRunAfter clean
